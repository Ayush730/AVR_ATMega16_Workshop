
pwm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000116  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006b4  00000000  00000000  0000016c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000054  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000874  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000029  00000000  00000000  00000894  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000164  00000000  00000000  000008bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000f8  00000000  00000000  00000a21  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000156  00000000  00000000  00000b19  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00000c70  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000bc  00000000  00000000  00000ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000040  00000000  00000000  00000d5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00000d9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   8:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  14:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  24:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  2c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  30:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  3c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  44:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  48:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  4c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  50:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  54:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  58:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  5c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  60:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  64:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  68:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  6c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  70:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  74:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  78:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  7c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  80:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  84:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  88:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e1       	ldi	r30, 0x16	; 22
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <.do_copy_data_start>

000000a4 <.do_copy_data_loop>:
  a4:	05 90       	lpm	r0, Z+
  a6:	0d 92       	st	X+, r0

000000a8 <.do_copy_data_start>:
  a8:	a0 30       	cpi	r26, 0x00	; 0
  aa:	b1 07       	cpc	r27, r17
  ac:	d9 f7       	brne	.-10     	; 0xa4 <.do_copy_data_loop>

000000ae <__do_clear_bss>:
  ae:	11 e0       	ldi	r17, 0x01	; 1
  b0:	a0 e0       	ldi	r26, 0x00	; 0
  b2:	b1 e0       	ldi	r27, 0x01	; 1
  b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
  b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
  b8:	a0 30       	cpi	r26, 0x00	; 0
  ba:	b1 07       	cpc	r27, r17
  bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>
  be:	0e 94 69 00 	call	0xd2	; 0xd2 <main>
  c2:	0c 94 89 00 	jmp	0x112	; 0x112 <_exit>

000000c6 <__bad_interrupt>:
  c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ca <inittimer>:
#include<avr/io.h>
#include<util/delay.h>
void inittimer(){
	TCCR2|=((1<<0)|(1<<2)|(1<<3)|(1<<5)|(1<<6));
  ca:	85 b5       	in	r24, 0x25	; 37
  cc:	8d 66       	ori	r24, 0x6D	; 109
  ce:	85 bd       	out	0x25, r24	; 37
}
  d0:	08 95       	ret

000000d2 <main>:
#include<avr/io.h>
#include<util/delay.h>
void inittimer(){
	TCCR2|=((1<<0)|(1<<2)|(1<<3)|(1<<5)|(1<<6));
  d2:	85 b5       	in	r24, 0x25	; 37
  d4:	8d 66       	ori	r24, 0x6D	; 109
  d6:	85 bd       	out	0x25, r24	; 37
}
void main(){
	inittimer();
	DDRB|=(1<<7);	
  d8:	bf 9a       	sbi	0x17, 7	; 23
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  de:	20 ea       	ldi	r18, 0xA0	; 160
  e0:	3f e0       	ldi	r19, 0x0F	; 15
  e2:	05 c0       	rjmp	.+10     	; 0xee <main+0x1c>
	int i;	
	while(1){	
		for(i=0;i<=255;i++){
			OCR2=i;
  e4:	83 bd       	out	0x23, r24	; 35
  e6:	f9 01       	movw	r30, r18
  e8:	31 97       	sbiw	r30, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x16>
void main(){
	inittimer();
	DDRB|=(1<<7);	
	int i;	
	while(1){	
		for(i=0;i<=255;i++){
  ec:	01 96       	adiw	r24, 0x01	; 1
  ee:	8f 3f       	cpi	r24, 0xFF	; 255
  f0:	91 05       	cpc	r25, r1
  f2:	c1 f3       	breq	.-16     	; 0xe4 <main+0x12>
  f4:	bc f3       	brlt	.-18     	; 0xe4 <main+0x12>
  f6:	8f ef       	ldi	r24, 0xFF	; 255
  f8:	90 e0       	ldi	r25, 0x00	; 0
			OCR2=i;
			_delay_ms(1);
		}
		for(i=255;i>=0;i--){
			OCR2=i;
  fa:	83 bd       	out	0x23, r24	; 35
  fc:	f9 01       	movw	r30, r18
  fe:	31 97       	sbiw	r30, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x2c>
	while(1){	
		for(i=0;i<=255;i++){
			OCR2=i;
			_delay_ms(1);
		}
		for(i=255;i>=0;i--){
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	4f ef       	ldi	r20, 0xFF	; 255
 106:	8f 3f       	cpi	r24, 0xFF	; 255
 108:	94 07       	cpc	r25, r20
 10a:	b9 f7       	brne	.-18     	; 0xfa <main+0x28>
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	ee cf       	rjmp	.-36     	; 0xee <main+0x1c>

00000112 <_exit>:
 112:	f8 94       	cli

00000114 <__stop_program>:
 114:	ff cf       	rjmp	.-2      	; 0x114 <__stop_program>
